name: Automated test suite

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test-python:

    # Reserved multicore instance for running tests
    runs-on:
      group: Beefy runners

    # Only run the action for the latest push
    # See https://docs.github.com/en/actions/using-jobs/using-concurrency#example-only-cancel-in-progress-jobs-or-runs-for-the-current-workflow
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      # TODO: we only need contracts/aave-v3-deploy for tests
      # but there does not seem to be an option to choose which submodules to checkout
      # https://github.com/actions/checkout
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          # npm version need to support aave-deploy
          node-version: 18
          cache: 'npm'
          cache-dependency-path: contracts/aave-v3-deploy/package-lock.json

      # pnpm needed to compile Enzyme
      # We need version 7 to be exact.
      - name: Install pnpm
        run: |
          curl -fsSL https://get.pnpm.io/install.sh | env PNPM_VERSION=7.27.1 sh -
          PNPM_HOME="/home/runner/.local/share/pnpm"
          # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#adding-a-system-path
          echo $PNPM_HOME >> $GITHUB_PATH

      # Poetry 2.0 breaks everything
      # https://github.com/python-poetry/poetry/blob/main/CHANGELOG.md
      - name: Install poetry
        run: pipx install "poetry<2"

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry env use '3.12'
          poetry install --all-extras

      - name: Install Ganache
        run: yarn global add ganache

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          # pick a nightly release from: https://github.com/foundry-rs/foundry/releases
          # version: 'nightly-de33b6af53005037b463318d2628b5cfcaf39916'
          #version: "nightly-fdd321bac95f0935529164a88faf99d4d5cfa321"
          version: "v1.2.3"

      # We also work around race condition for setting up Aave NPM packages.
      - name: Setup Aave v3 for tests
        run: |
          poetry run install-aave-for-testing

      # We also work around race condition for setting up Aave NPM packages.
      - name: Build needed contracts
        run: |
          pnpm --version 
      # Broken with the latest foudry?
      # make guard in-house safe-integration

      # Lagoon source deployment needs soldeer
      - name: Lagoon dependency issue smoke test
        run: |          
          export PATH="$HOME/.cargo/bin:$PATH"
          (cd contracts/lagoon-v0 && forge soldeer install) 
          ls -lha contracts/lagoon-v0/dependencies/
          ls -lha contracts/lagoon-v0/dependencies/@openzeppelin-contracts-upgradeable-5.0.0/

      - name: Run tests (parallel)
        run: |
          poetry run pytest --tb=native -n auto
        env:
          BNB_CHAIN_JSON_RPC: ${{ secrets.BNB_CHAIN_JSON_RPC }}
          JSON_RPC_POLYGON_ARCHIVE: ${{ secrets.JSON_RPC_POLYGON_ARCHIVE }}
          JSON_RPC_POLYGON: ${{ secrets.JSON_RPC_POLYGON }}
          JSON_RPC_ETHEREUM: ${{ secrets.JSON_RPC_ETHEREUM }}
          JSON_RPC_BASE: ${{ secrets.JSON_RPC_BASE }}
          JSON_RPC_BINANCE: ${{ secrets.JSON_RPC_BINANCE }}
          ETHEREUM_JSON_RPC: ${{ secrets.JSON_RPC_ETHEREUM }}
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
          GOOGLE_CLOUD_REGION: ${{ secrets.GOOGLE_CLOUD_REGION }}
          KEY_RING: ${{ secrets.KEY_RING }}
          KEY_NAME: ${{ secrets.KEY_NAME }}
          GCP_ADC_CREDENTIALS_STRING: ${{ secrets.GCP_ADC_CREDENTIALS_STRING }}
          TOKEN_RISK_API_KEY: ${{ secrets.TOKEN_RISK_API_KEY }}

      - name: Ruff lint check
        run: |
          poetry run ruff format --check --diff          

